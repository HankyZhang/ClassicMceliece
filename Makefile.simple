# Simple Makefile for Classic McEliece Benchmarks
# This builds separate benchmark executables for our implementation and reference

CC = clang
CFLAGS = -O2 -g -Wall -Wextra -Wno-unused-parameter -Wno-sign-compare
INCLUDES = -I. -Imceliece6688128/ -Imceliece6688128/subroutines/

# Our implementation sources (only what we need)
OUR_SOURCES = \
    mceliece_keygen.c \
    mceliece_shake.c \
    mceliece_gf.c \
    mceliece_poly.c \
    mceliece_matrix_ops.c \
    mceliece_genpoly.c \
    reference_shake.c \
    mceliece_vector.c \
    mceliece_decode.c \
    mceliece_encode.c \
    controlbits.c \
    kat_drbg.c \
    rng.c \
    mceliece_kem.c

# Reference sources needed for our implementation (GF operations)
REF_NEEDED_SOURCES = \
    mceliece6688128/gf.c

# Benchmark sources
TIMING_SOURCE = benchmark_timing.c

# Libraries
LIBS = -lm

# Target executables
CALLGRAPH_TARGET = call_graph_benchmark

# Default target
all: $(CALLGRAPH_TARGET)

# Call graph based benchmark
$(CALLGRAPH_TARGET): call_graph_benchmark.c function_profiler.c hierarchical_profiler.c $(OUR_SOURCES) $(REF_NEEDED_SOURCES)
	$(CC) $(CFLAGS) $(INCLUDES) -DCRYPTO_NAMESPACE\(x\)=ref_\#\#x -o $@ $^ $(LIBS)

# Ensure reference implementation is built
ref_check:
	@if [ ! -x mceliece6688128/kat ]; then \
		echo "Building reference implementation..."; \
		cd mceliece6688128 && make; \
	fi

# Test call graph profiling
test_callgraph: $(CALLGRAPH_TARGET)
	@echo "=== Testing Call Graph Profiling ==="
	./$(CALLGRAPH_TARGET) -n 1

# Run call graph analysis
run_callgraph: $(CALLGRAPH_TARGET)
	@echo "=== Running Call Graph Analysis ==="
	./$(CALLGRAPH_TARGET) -n 1 -o call_graph_analysis.csv

# Quick call graph test
run_callgraph_quick: $(CALLGRAPH_TARGET)
	@echo "=== Quick Call Graph Test ==="
	./$(CALLGRAPH_TARGET) -n 1 -q

# Clean build artifacts
clean:
	rm -f $(CALLGRAPH_TARGET) *.csv *.log benchmark_*.csv detailed_profiling.csv call_graph_analysis.csv


# Help target
help:
	@echo "Available targets:"
	@echo "  all              - Build call graph benchmark"
	@echo "  test_callgraph   - Test call graph profiling"
	@echo "  run_callgraph    - Call graph analysis with CSV output"
	@echo "  run_callgraph_quick - Quick call graph test"
	@echo "  clean            - Clean build artifacts"
	@echo ""
	@echo "Manual usage:"
	@echo "  ./call_graph_benchmark -n 1           # Call graph based profiling"

.PHONY: all clean help test_callgraph run_callgraph run_callgraph_quick ref_check
